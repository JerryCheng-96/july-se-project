<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.julyseproj.IDao.LogMapper">
  <resultMap id="BaseResultMap" type="com.julyseproj.entity.Log">
    <id column="log_id" jdbcType="INTEGER" property="logId" />
    <result column="log_uploader" jdbcType="INTEGER" property="logUploader" />
    <result column="log_group" jdbcType="INTEGER" property="logGroup" />
    <result column="log_time" jdbcType="TIMESTAMP" property="logTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.julyseproj.entity.Log">
    <result column="log_content" jdbcType="LONGVARCHAR" property="logContent" />
  </resultMap>
  <sql id="Base_Column_List">
    log_id, log_uploader, log_group, log_time
  </sql>
  <sql id="Blob_Column_List">
    log_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from log
    where log_id = #{logId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from log
    where log_id = #{logId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.julyseproj.entity.Log">
    insert into log (log_id, log_uploader, log_group, 
      log_time, log_content)
    values (#{logId,jdbcType=INTEGER}, #{logUploader,jdbcType=INTEGER}, #{logGroup,jdbcType=INTEGER}, 
      #{logTime,jdbcType=TIMESTAMP}, #{logContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.julyseproj.entity.Log">
    insert into log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        log_id,
      </if>
      <if test="logUploader != null">
        log_uploader,
      </if>
      <if test="logGroup != null">
        log_group,
      </if>
      <if test="logTime != null">
        log_time,
      </if>
      <if test="logContent != null">
        log_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="logId != null">
        #{logId,jdbcType=INTEGER},
      </if>
      <if test="logUploader != null">
        #{logUploader,jdbcType=INTEGER},
      </if>
      <if test="logGroup != null">
        #{logGroup,jdbcType=INTEGER},
      </if>
      <if test="logTime != null">
        #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logContent != null">
        #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.julyseproj.entity.Log">
    update log
    <set>
      <if test="logUploader != null">
        log_uploader = #{logUploader,jdbcType=INTEGER},
      </if>
      <if test="logGroup != null">
        log_group = #{logGroup,jdbcType=INTEGER},
      </if>
      <if test="logTime != null">
        log_time = #{logTime,jdbcType=TIMESTAMP},
      </if>
      <if test="logContent != null">
        log_content = #{logContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.julyseproj.entity.Log">
    update log
    set log_uploader = #{logUploader,jdbcType=INTEGER},
      log_group = #{logGroup,jdbcType=INTEGER},
      log_time = #{logTime,jdbcType=TIMESTAMP},
      log_content = #{logContent,jdbcType=LONGVARCHAR}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.julyseproj.entity.Log">
    update log
    set log_uploader = #{logUploader,jdbcType=INTEGER},
      log_group = #{logGroup,jdbcType=INTEGER},
      log_time = #{logTime,jdbcType=TIMESTAMP}
    where log_id = #{logId,jdbcType=INTEGER}
  </update>
</mapper>