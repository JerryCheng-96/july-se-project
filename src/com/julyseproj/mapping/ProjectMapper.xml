<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.julyseproj.IDao.ProjectMapper">
  <resultMap id="BaseResultMap" type="com.julyseproj.entity.Project">
    <id column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="project_creator" jdbcType="INTEGER" property="projectCreator" />
    <result column="project_approved" jdbcType="TINYINT" property="projectApproved" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.julyseproj.entity.Project">
    <result column="project_description" jdbcType="LONGVARCHAR" property="projectDescription" />
  </resultMap>
  <sql id="Base_Column_List">
    project_id, project_name, project_creator, project_approved
  </sql>
  <sql id="Blob_Column_List">
    project_description
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from project
    where project_id = #{projectId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from project
    where project_id = #{projectId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.julyseproj.entity.Project">
    insert into project (project_id, project_name, project_creator, 
      project_approved, project_description
      )
    values (#{projectId,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR}, #{projectCreator,jdbcType=INTEGER}, 
      #{projectApproved,jdbcType=TINYINT}, #{projectDescription,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.julyseproj.entity.Project">
    insert into project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        project_id,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="projectCreator != null">
        project_creator,
      </if>
      <if test="projectApproved != null">
        project_approved,
      </if>
      <if test="projectDescription != null">
        project_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectCreator != null">
        #{projectCreator,jdbcType=INTEGER},
      </if>
      <if test="projectApproved != null">
        #{projectApproved,jdbcType=TINYINT},
      </if>
      <if test="projectDescription != null">
        #{projectDescription,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.julyseproj.entity.Project">
    update project
    <set>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="projectCreator != null">
        project_creator = #{projectCreator,jdbcType=INTEGER},
      </if>
      <if test="projectApproved != null">
        project_approved = #{projectApproved,jdbcType=TINYINT},
      </if>
      <if test="projectDescription != null">
        project_description = #{projectDescription,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.julyseproj.entity.Project">
    update project
    set project_name = #{projectName,jdbcType=VARCHAR},
      project_creator = #{projectCreator,jdbcType=INTEGER},
      project_approved = #{projectApproved,jdbcType=TINYINT},
      project_description = #{projectDescription,jdbcType=LONGVARCHAR}
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.julyseproj.entity.Project">
    update project
    set project_name = #{projectName,jdbcType=VARCHAR},
      project_creator = #{projectCreator,jdbcType=INTEGER},
      project_approved = #{projectApproved,jdbcType=TINYINT}
    where project_id = #{projectId,jdbcType=INTEGER}
  </update>
</mapper>