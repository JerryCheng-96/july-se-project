<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.julyseproj.IDao.EngineerAccountMapper">
  <resultMap id="BaseResultMap" type="com.julyseproj.entity.EngineerAccount">
    <id column="account_e_id" jdbcType="INTEGER" property="accountEId" />
    <result column="account_e_password" jdbcType="INTEGER" property="accountEPassword" />
    <result column="account_e_owner" jdbcType="INTEGER" property="accountEOwner" />
    <result column="account_e_session" jdbcType="VARCHAR" property="accountESession" />
  </resultMap>
  <sql id="Base_Column_List">
    account_e_id, account_e_password, account_e_owner, account_e_session
  </sql>
  <select id="selectByOwner" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account_engineer
    where account_e_owner = #{engineerId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from account_engineer
    where account_e_id = #{accountEId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from account_engineer
    where account_e_id = #{accountEId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.julyseproj.entity.EngineerAccount">
    insert into account_engineer (account_e_id, account_e_password, account_e_owner, 
      account_e_session)
    values (#{accountEId,jdbcType=INTEGER}, #{accountEPassword,jdbcType=INTEGER}, #{accountEOwner,jdbcType=INTEGER}, 
      #{accountESession,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.julyseproj.entity.EngineerAccount">
    insert into account_engineer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="accountEId != null">
        account_e_id,
      </if>
      <if test="accountEPassword != null">
        account_e_password,
      </if>
      <if test="accountEOwner != null">
        account_e_owner,
      </if>
      <if test="accountESession != null">
        account_e_session,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="accountEId != null">
        #{accountEId,jdbcType=INTEGER},
      </if>
      <if test="accountEPassword != null">
        #{accountEPassword,jdbcType=INTEGER},
      </if>
      <if test="accountEOwner != null">
        #{accountEOwner,jdbcType=INTEGER},
      </if>
      <if test="accountESession != null">
        #{accountESession,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.julyseproj.entity.EngineerAccount">
    update account_engineer
    <set>
      <if test="accountEPassword != null">
        account_e_password = #{accountEPassword,jdbcType=INTEGER},
      </if>
      <if test="accountEOwner != null">
        account_e_owner = #{accountEOwner,jdbcType=INTEGER},
      </if>
      <if test="accountESession != null">
        account_e_session = #{accountESession,jdbcType=VARCHAR},
      </if>
    </set>
    where account_e_id = #{accountEId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.julyseproj.entity.EngineerAccount">
    update account_engineer
    set account_e_password = #{accountEPassword,jdbcType=INTEGER},
      account_e_owner = #{accountEOwner,jdbcType=INTEGER},
      account_e_session = #{accountESession,jdbcType=VARCHAR}
    where account_e_id = #{accountEId,jdbcType=INTEGER}
  </update>
</mapper>